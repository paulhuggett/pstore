name: SonarCloud

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  sonar-cloud:
    runs-on: ubuntu-latest
    env:
      # Find the latest version on this page:
      # https://docs.sonarcloud.io/advanced-setup/ci-based-analysis/sonarscanner-cli/
      SONAR_SCANNER_VERSION: "5.0.1.3006"
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      SONAR_CACHE_DIR: build_cache_dir

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          submodules: 'True'
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install cmake
        run: |
          sudo apt-get update && sudo apt-get install --yes cmake

      - name: Cache SonarCloud packages and analysis
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          key: ${{ runner.os }}-sonar
          path: |
            ~/.sonar/cache
            ${{ env.SONAR_CACHE_DIR }}
          restore-keys: ${{ runner.os }}-sonar

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p "$HOME/.sonar"
          curl -sSLo "$HOME/.sonar/sonar-scanner.zip" "${{ env.SONAR_SCANNER_DOWNLOAD_URL }}"
          unzip -o "$HOME/.sonar/sonar-scanner.zip" -d "$HOME/.sonar/"
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> "$GITHUB_PATH"

      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo "$HOME/.sonar/build-wrapper-linux-x86.zip" "${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}"
          unzip -o "$HOME/.sonar/build-wrapper-linux-x86.zip" -d "$HOME/.sonar/"
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> "$GITHUB_PATH"

      - name: Create Build Environment
        env:
          BUILD_PATH: ${{ github.workspace }}/build
        run: cmake -E make_directory "$BUILD_PATH"

      - name: Configure
        env:
          BUILD_PATH: ${{ github.workspace }}/build
        run: |
          cmake -G "Unix Makefiles"    \
                -S . \
                -B "$BUILD_PATH" \
                -D PSTORE_COVERAGE=Yes \
                -D PSTORE_EXAMPLES=Yes \
                "$GITHUB_WORKSPACE"

      - name: Build
        env:
          BUILD_PATH: ${{ github.workspace }}/build
          TOOLS_PATH: ${{ github.workspace }}/sonarcloud
          BW_PATH: ${{ github.workspace }}/bw-output
        run: build-wrapper-linux-x86-64 --out-dir "$BW_PATH" make -j "$(nproc)" -C "$BUILD_PATH" clean all pstore-system-tests

      - name: Gather Coverage
        env:
          BUILD_PATH: ${{ github.workspace }}/build
          TOOLS_PATH: ${{ github.workspace }}/sonarcloud
        run: find "$BUILD_PATH" -name \*.gcno -exec gcov {} \;

      - name: Run Sonar Scanner
        env:
          BUILD_PATH: ${{ github.workspace }}/build
          TOOLS_PATH: ${{ github.workspace }}/sonarcloud
          BW_PATH: ${{ github.workspace }}/bw-output
          THREADS: 2
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -X                                                              \
                        --define sonar.host.url="${{ env.SONAR_SERVER_URL }}"           \
                        --define sonar.branch.name="$(git rev-parse --abbrev-ref HEAD)" \
                        --define sonar.cfamily.build-wrapper-output="$BW_PATH"          \
                        --define sonar.cfamily.gcov.reportsPath="$BUILD_PATH"           \
                        --define sonar.cfamily.threads="$THREADS"                       \
                        --define sonar.coverage.exclusions='system_tests/**/*'          \
                        --define sonar.cpd.exclusions='unittests/**/*,examples/**/*'    \
                        --define sonar.exclusions='build/**/*,3rd_party/**/*'           \
                        --define sonar.organization=paulhuggett-github                  \
                        --define sonar.projectKey=paulhuggett_pstore                    \
                        --define sonar.projectName=pstore                               \
                        --define sonar.projectVersion="$GITHUB_SHA"                     \
                        --define sonar.python.version=3.7,3.8,3.9,3.10,3.11             \
                        --define sonar.sourceEncoding=UTF-8                             \
                        --define sonar.sources=include,lib,examples                     \
                        --define sonar.tests=system_tests,unittests
